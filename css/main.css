@charset "UTF-8";
:root {
  --font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  --font-monospace: "Consolas", monospace;
  --font-size: 18px;
  --font-weight: 400;
  --space: 1rem;
  --space-xs: .4rem;
  --space-s: .8rem;
  --space-l: 1.2rem;
  --space-xl: 1.8rem;
  --line-height: 1.5rem;
  --border-width: 1px;
  --border: var(--border-width) solid var(--color-secondary);
  --border-radius: .25rem;
  --grid-column-gap: var(--space);
  --grid-row-gap: var(--space);
  --grid-template-columns: repeat(auto-fit, minmax(0%, 1fr));
  --form-label-width: 30%;
  --modal-margin: 2rem auto;
  --modal-width: 50%;
  --modal-min-height: auto;
  --modal-min-width: 600px;
  --shadow: 0 3px 10px rgb(0 0 0 / 0.2);
  /* icons */
  --icon-arrow: url('data:image/svg+xml;utf8,<svg viewBox="0 0 20 20" fill="white" xmlns="http://www.w3.org/2000/svg"><path d="M0,5 l10,10,10,-10z"/></svg>');
  --icon-link: url('data:image/svg+xml;utf8,<svg viewBox="0 0 16 16" fill="white" xmlns="http://www.w3.org/2000/svg"><path d="M8.6 3.5a.5.5 0 0 0-.5-.5H1.5A1.5 1.5 0 0 0 0 4.5v10A1.5 1.5 0 0 0 1.5 16h10a1.5 1.5 0 0 0 1.5-1.5V7.7a.5.5 0 0 0-1 0V14.5a.5.5 0 0 1-.5.5h-10a.5.5 0 0 1-.5-.5v-10a.5.5 0 0 1 .5-.5h6.6a.5.5 0 0 0 .5-.5z M16 .5a.5.5 0 0 0-.5-.5h-5a.5.5 0 0 0 0 1h3.8L6 9a.5.5 0 1 0 .7.7L15 1.7V5.5a.5.5 0 0 0 1 0v-5z"/></svg>');
}

@media only screen and (max-width: 768px) {
  :root {
    --space: .4rem;
    --modal-margin: 0;
    --modal-width: 100%;
    --modal-min-height: 100%;
    --modal-min-width: auto;
    --grid-column-gap: .4rem;
    --grid-row-gap: .4rem;
    --grid-template-columns: 1fr;
  }
}
@media (prefers-reduced-motion: reduce) {
  *, ::after, ::before {
    transition: none !important;
    animation: none !important;
  }
}
*, ::after, ::before {
  box-sizing: inherit;
}

html {
  box-sizing: border-box;
  font-family: var(--font-family);
  font-size: var(--font-size);
  font-weight: var(--font-weight);
  line-height: var(--line-height);
  background-color: var(--color-background);
  color: var(--color-text);
  -webkit-tap-highlight-color: transparent;
  -webkit-text-size-adjust: 100%;
  -moz-text-size-adjust: 100%;
  text-size-adjust: 100%;
  text-rendering: optimizeLegibility;
}

body {
  width: 100%;
  margin: 0;
  padding: 0;
}

hr {
  border: 0;
  border-top: var(--border);
}

.hide {
  display: none !important;
}

:root {
  /* css */
  --color-text: #fcfdfd;
  --color-inverse: #fcfdfd;
  --color-background: #232831;
  /* primary */
  --color-primary: #5280b8;
  --color-primary-focus: #648dc0;
  --color-primary-active: #769ac7;
  --color-primary-background: #2c3a4c;
  /* secondary */
  --color-secondary: #4C566A;
  --color-secondary-focus: #576279;
  --color-secondary-active: #616e88;
  --color-secondary-background: #2b313c;
  /* danger */
  --color-danger: #ca5661;
  --color-danger-focus: #d06973;
  --color-danger-active: #d67d85;
  --color-danger-background: #44313b;
  /* success */
  --color-success: #86c5c4;
  --color-success-focus: #97cdcc;
  --color-success-active: #a9d5d4;
  --color-success-background: #37474e;
}

.light {
  /* css */
  --color-text: #232831;
  --color-inverse: #232831;
  --color-background: #fcfdfd;
  /* primary */
  --color-primary: #5280b8;
  --color-primary-focus: #4673ab;
  --color-primary-active: #3e6799;
  --color-primary-background: #dae4ef;
  /* secondary */
  --color-secondary: #D8DEE9;
  --color-secondary-focus: #c8d0e0;
  --color-secondary-active: #b7c2d7;
  --color-secondary-background: #f5f7f9;
  /* danger */
  --color-danger: #ca5661;
  --color-danger-focus: #c4424f;
  --color-danger-active: #b53844;
  --color-danger-background: #f2dcde;
  /* success */
  --color-success: #86c5c4;
  --color-success-focus: #75bdbb;
  --color-success-active: #64b4b3;
  --color-success-background: #e4f2f2;
}

h1 {
  font-size: 2rem;
  line-height: 2rem;
  border-bottom: var(--border);
  border-image: linear-gradient(to right, var(--color-secondary), transparent) 1;
  padding: 1rem 0;
  margin: 1rem 0;
}

h2 {
  font-size: 1.6rem;
  line-height: 1.6rem;
  padding: 0;
  margin: 0 0 1rem 0;
}

h3 {
  font-size: 1rem;
  line-height: 1rem;
  padding: 0;
  margin: 0 0 1rem 0;
}

h4, h5, h6 {
  display: none;
}

a {
  color: var(--color-primary);
  text-decoration: none;
}
a:is(:hover, :focus) {
  color: var(--color-primary-focus);
}
a:active {
  color: var(--color-primary-active);
}
a[target=_blank]::after {
  content: "";
  width: 0.8rem;
  height: 0.8rem;
  margin-left: 0.2rem;
  mask: var(--icon-link) center no-repeat;
  -webkit-mask: var(--icon-link) center no-repeat;
  display: inline-block;
  background-color: currentColor;
}

ol, ul {
  padding-left: var(--space);
}

code,
kbd,
samp {
  font-family: var(--font-monospace);
  font-size: 1rem;
  line-height: var(--line-height);
}

pre,
blockquote,
.spoiler,
.note {
  --private-color-block: var(--color-secondary);
  display: block;
  margin: 1rem 0;
  padding: var(--space-xs) var(--space-s);
  border: var(--border);
  border-color: var(--private-color-block);
  border-left-width: calc(var(--border-width) * 4);
  border-top-right-radius: var(--border-radius);
  border-bottom-right-radius: var(--border-radius);
  color: var(--color-text);
  background-color: var(--color-background);
}

pre {
  overflow-x: auto;
  overflow-y: hidden;
  font-size: 1rem;
  line-height: var(--line-height);
}
pre code {
  font-weight: inherit;
  font-size: inherit;
  color: inherit;
}

details > summary {
  cursor: pointer;
  list-style-type: none;
  user-select: none;
}
details > summary::-webkit-details-marker {
  display: none;
}
details > summary::before {
  content: " ";
  display: inline-block;
  position: relative;
  top: -0.05rem;
  width: 0.6rem;
  height: 0.6rem;
  transform: rotate(-90deg);
  mask: var(--icon-arrow) center no-repeat;
  -webkit-mask: var(--icon-arrow) center no-repeat;
  background-color: currentColor;
  transition: transform 0.1s ease-out;
  margin-right: var(--space-xs);
}
details[open] > summary::before {
  transform: rotate(0);
}

.danger {
  color: var(--color-danger);
}

.success {
  color: var(--color-success);
}

.dimmed {
  opacity: 0.5;
}

.note,
.spoiler {
  --private-color-block: var(--color-primary);
}
.note.success,
.spoiler.success {
  color: var(--color-text);
  --private-color-block: var(--color-success);
}
.note.danger,
.spoiler.danger {
  color: var(--color-text);
  --private-color-block: var(--color-danger);
}
.note > :is(header, summary),
.spoiler > :is(header, summary) {
  font-weight: bold;
  border-bottom: var(--border);
  border-color: var(--private-color-block);
  color: var(--private-color-block);
  padding: 0 var(--space-s) var(--space-xs) var(--space-s);
  margin: 0 calc(var(--space-s) * -1);
}
.note > :is(header, summary) + *,
.spoiler > :is(header, summary) + * {
  margin-top: var(--space-xs);
}
.note > :first-child,
.spoiler > :first-child {
  margin-top: 0;
}
.note > :last-child,
.spoiler > :last-child {
  margin-bottom: 0;
}

.spoiler {
  --private-color-block: var(--color-secondary);
}
.spoiler > summary {
  cursor: pointer;
  user-select: none;
  color: var(--color-text);
  font-weight: normal;
}
.spoiler:not([open]) > summary {
  border-bottom: 0;
  padding-bottom: 0;
}

body > header {
  position: sticky;
  top: 0;
  z-index: 1;
}
body > main {
  width: 100%;
  margin-right: auto;
  margin-left: auto;
  padding: var(--space);
}
body > footer {
  padding: var(--space);
}

.container {
  margin: 0 auto;
  padding: var(--space);
}

.grid {
  display: grid;
  grid-column-gap: var(--grid-column-gap);
  grid-row-gap: var(--grid-row-gap);
  grid-template-columns: var(--grid-template-columns);
}

.table {
  width: 100%;
  text-align: left;
  border-collapse: collapse;
}
.table > thead > tr > th, .table .cell.header {
  font-weight: bolder;
  border-bottom: var(--border);
  text-transform: capitalize;
}
.table td, .table th, .table .cell {
  padding: var(--space-xs) var(--space-s);
}
.table.hoverable > tbody > tr:hover {
  background-color: var(--color-secondary-active);
}

input,
select,
textarea,
button,
.button,
.listbox {
  display: block;
  width: 100%;
  margin: 0;
  padding: var(--space-xs) var(--space-s);
  line-height: var(--line-height);
  background-color: var(--color-background);
  color: var(--color-text);
  border: var(--border);
  border-radius: var(--border-radius);
  overflow: hidden;
  outline: none;
  font-size: 1rem;
  box-sizing: border-box;
}

input:not([type=button], [type=submit], [type=reset]):disabled,
select:disabled,
textarea:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}
input:not([type=button], [type=submit], [type=reset]):focus,
select:focus,
textarea:focus {
  background-color: var(--color-secondary-background);
}
input:not([type=button], [type=submit], [type=reset]):invalid,
select:invalid,
textarea:invalid {
  border-color: var(--color-danger);
  background-color: var(--color-danger-background);
}

button,
.button,
input:is([type=button], [type=submit], [type=reset]) {
  width: auto;
  cursor: pointer;
  background-color: var(--color-secondary);
  color: var(--color-inverse);
  text-decoration: none;
  border: 0;
}
button:is(:disabled, .disabled),
.button:is(:disabled, .disabled),
input:is([type=button], [type=submit], [type=reset]):is(:disabled, .disabled) {
  opacity: 0.5;
  pointer-events: none;
}
button:is(:hover, :focus),
.button:is(:hover, :focus),
input:is([type=button], [type=submit], [type=reset]):is(:hover, :focus) {
  background-color: var(--color-secondary-focus);
  color: var(--color-inverse);
}
button:is(:active, .active),
.button:is(:active, .active),
input:is([type=button], [type=submit], [type=reset]):is(:active, .active) {
  background-color: var(--color-secondary-active);
  color: var(--color-inverse);
}

:is(button, input, .button)[type=submit] {
  background-color: var(--color-primary);
}
:is(button, input, .button)[type=submit]:is(:hover, :focus, .focus) {
  background-color: var(--color-primary-focus);
}
:is(button, input, .button)[type=submit]:active {
  background-color: var(--color-primary-active);
}

input:is([type=checkbox], [type=radio]) {
  position: relative;
  padding: 0;
  height: 1.2rem;
  width: 1.2rem;
  cursor: pointer;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-color: var(--color-background);
}
input:is([type=checkbox], [type=radio])::before {
  position: absolute;
  content: "";
  display: block;
  top: 0.2rem;
  bottom: 0.2rem;
  left: 0.2rem;
  right: 0.2rem;
  background-color: transparent;
  transition: 0.1s background-color ease-out;
}
input:is([type=checkbox], [type=radio]):checked::before {
  background-color: var(--color-primary);
}

input[type=radio] {
  border-radius: 50%;
}
input[type=radio]::before {
  border-radius: 50%;
}

input[type=checkbox]::before {
  border-radius: calc(var(--border-radius) - 0.1rem);
}
input[type=checkbox].switch {
  width: 4rem;
  height: var(--line-height);
  overflow: initial;
}
input[type=checkbox].switch::before {
  content: "OFF";
  font-size: 0.8rem;
  width: 2rem;
  top: var(--border-width);
  bottom: var(--border-width);
  left: var(--border-width);
  right: auto;
  line-height: calc(var(--line-height) - 4 * var(--border-width));
  background-color: var(--color-secondary);
  text-align: center;
  transition: 0.1s background-color ease-out, 0.1s left ease-out;
}
input[type=checkbox].switch:checked::before {
  background: var(--color-success);
  content: "ON";
  left: calc(2rem - 3 * var(--border-width));
}

form {
  overflow: hidden;
}
form fieldset {
  border: 0;
  padding: 0;
  margin: 0;
}
form details.group {
  margin-top: var(--space-xs);
}
form details.group + details.group {
  margin-top: 0;
}
form label {
  display: flex;
  align-items: center;
  justify-content: flex-start;
  gap: var(--space-xs);
  margin-top: var(--space-xs);
  color: var(--color-text);
}
form label:first-child {
  margin-top: 0;
}
form label:last-child {
  margin-bottom: var(--space-xs);
}
form label > :first-child {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  text-align: right;
  text-transform: capitalize;
  width: var(--form-label-width);
  min-width: var(--form-label-width);
}
form label > :last-child:not(input[type=checkbox], input[type=radio]) {
  flex-grow: 1;
}
form footer {
  display: flex;
  gap: 0.5rem;
  align-items: center;
  flex-direction: row;
  justify-content: flex-end;
  padding: var(--space) 0;
  margin-top: auto;
}

details.group summary.button {
  display: flex;
  align-items: center;
  gap: var(--space-xs);
  border-radius: 0;
  padding: var(--space-xs) var(--space-s);
}
details.group summary.button :first-child {
  flex: 1;
}
details.group[open] summary.button {
  margin-bottom: var(--space-xs);
}

select {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-repeat: no-repeat;
  background-position: center right var(--space-s);
  background-image: var(--icon-arrow);
  background-size: 0.6rem;
}

@keyframes sweep-down {
  0% {
    opacity: 0;
    transform: translateY(-10px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}
@keyframes sweep-up {
  0% {
    opacity: 0;
    transform: translateY(10px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}
.dropdown {
  position: relative;
}
.dropdown > :first-child::after {
  display: block;
  content: "...";
  text-align: center;
}
.dropdown > :first-child:not(:empty)::after {
  display: inline-block;
  content: " ";
  margin-left: var(--space-s);
  background: var(--icon-arrow);
  width: 0.6rem;
  height: 0.6rem;
}
.dropdown.open > .items {
  display: flex;
}
.dropdown > .items {
  position: absolute;
  display: none;
  background-color: var(--color-background);
  flex-direction: column;
  border: var(--border);
  border-radius: var(--border-radius);
  box-shadow: var(--shadow);
  width: auto;
  user-select: none;
  overflow: hidden;
  z-index: 1;
  /* default bottom-left */
  top: calc(100% + 0.2rem);
  bottom: auto;
  left: 0;
  right: auto;
  animation: sweep-down 0.1s ease-out;
}
.dropdown > .items button,
.dropdown > .items .button,
.dropdown > .items input:is([type=button], [type=submit], [type=reset]) {
  border-radius: 0;
  padding: var(--space-xs) var(--space);
  background-color: var(--color-background);
  color: var(--color-text);
  width: 100%;
  white-space: nowrap;
  text-align: left;
}
.dropdown > .items button:is(:hover, :focus),
.dropdown > .items .button:is(:hover, :focus),
.dropdown > .items input:is([type=button], [type=submit], [type=reset]):is(:hover, :focus) {
  background-color: var(--color-secondary-focus);
}
.dropdown > .items button:is(:active, .active),
.dropdown > .items .button:is(:active, .active),
.dropdown > .items input:is([type=button], [type=submit], [type=reset]):is(:active, .active) {
  background-color: var(--color-secondary-active);
}
.dropdown.bottom-right > .items {
  top: calc(100% + 0.2rem);
  bottom: auto;
  left: auto;
  right: 0;
  animation: sweep-down 0.1s ease-out;
}
.dropdown.top-left > .items {
  top: auto;
  bottom: calc(100% + 0.2rem);
  left: 0;
  right: auto;
  animation: sweep-up 0.1s ease-out;
}
.dropdown.top-right > .items {
  top: auto;
  bottom: calc(100% + 0.2rem);
  left: auto;
  right: 0;
  animation: sweep-up 0.1s ease-out;
}

div.listbox {
  padding: var(--space-xs) 0;
}
div.listbox > div {
  position: relative;
  /* line for new item */
}
div.listbox > div::before {
  content: "=";
  position: absolute;
  z-index: 1;
  top: 0;
  bottom: 0;
  left: 0;
  width: 2rem;
  padding: 0.2rem 0;
  text-align: center;
  cursor: grab;
}
div.listbox > div button {
  position: absolute;
  z-index: 1;
  top: 0;
  bottom: 0;
  right: 0;
  padding: 0;
  border: 0;
  width: 2rem;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}
div.listbox > div button::before {
  content: "×";
}
div.listbox > div button:not(:hover) {
  background-color: transparent;
}
div.listbox > div button:hover ~ input {
  background-color: var(--color-secondary-background);
}
div.listbox > div input {
  padding: 0.2rem 2.5rem;
  border: var(--border);
  border-color: transparent;
  border-radius: 0;
}
div.listbox > div input:hover {
  background-color: var(--color-secondary-background);
}
div.listbox > div input:invalid {
  border-color: var(--color-danger);
  background-color: var(--color-danger-background);
}
div.listbox > div:last-child button::before {
  content: "+";
}

.modal {
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  overflow: auto;
  z-index: 1;
}
.modal:not(.open) {
  display: none;
}
.modal::before {
  position: absolute;
  z-index: -1;
  content: "";
  display: block;
  width: 100%;
  height: 100%;
  background-color: var(--color-background);
  opacity: 0.5;
  filter: grayscale(100%);
}
.modal > .dialog {
  position: relative;
  z-index: 2;
  width: var(--modal-width);
  min-width: var(--modal-min-width);
  min-height: var(--modal-min-height);
  margin: var(--modal-margin);
  background-color: var(--color-background);
  border: var(--border);
  border-radius: var(--border-radius);
  box-shadow: var(--shadow);
}
.modal > .dialog > header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  border-bottom: var(--border);
  padding: var(--space);
}
.modal > .dialog > footer {
  display: flex;
  align-items: center;
  justify-content: flex-end;
  gap: var(--space-xs);
  border-top: var(--border);
  padding: var(--space);
}

@keyframes spin {
  0% {
    background-position-x: 0%, 0%, 0%, 0%, 0%;
  }
  10% {
    background-position-x: 26%, 0%, 0%, 0%, 0%;
  }
  20% {
    background-position-x: 50%, 26%, 0%, 0%, 0%;
  }
  30% {
    background-position-x: 71%, 50%, 26%, 0%, 0%;
  }
  40% {
    background-position-x: 87%, 71%, 50%, 26%, 0%;
  }
  50% {
    background-position-x: 97%, 87%, 71%, 50%, 26%;
  }
  60% {
    background-position-x: 100%, 97%, 87%, 71%, 50%;
  }
  70% {
    background-position-x: 100%, 100%, 97%, 87%, 71%;
  }
  80% {
    background-position-x: 100%, 100%, 100%, 97%, 87%;
  }
  90% {
    background-position-x: 100%, 100%, 100%, 100%, 97%;
  }
  100% {
    background-position-x: 100%, 100%, 100%, 100%, 100%;
  }
}
.spinner {
  --color: var(--color-primary);
  --size: 1rem;
  margin: 0 auto;
  height: var(--size);
  --private-spinner-dot: radial-gradient(farthest-side, var(--color) 70%, transparent) center no-repeat;
  background: var(--private-spinner-dot), var(--private-spinner-dot), var(--private-spinner-dot), var(--private-spinner-dot), var(--private-spinner-dot);
  background-size: var(--size) var(--size);
  animation: 2s linear 0s infinite spin;
  mask: radial-gradient(circle, black 40%, transparent 80%) center no-repeat;
  -webkit-mask: -webkit-radial-gradient(circle, black 40%, transparent 80%) center no-repeat;
}

nav {
  display: flex;
  width: 100%;
  background-color: var(--color-background);
  user-select: none;
  border-bottom: var(--border);
}
nav button,
nav .button,
nav input:is([type=button], [type=submit], [type=reset]) {
  border-radius: 0;
  background-color: var(--color-background);
  white-space: nowrap;
}
nav > .dropdown {
  position: relative;
  display: inline-block;
}
nav > .dropdown > .items {
  display: none;
  position: absolute;
  border: var(--border);
  min-width: 100%;
  top: 100%;
  animation: sweep-down 0.1s ease-out;
}
nav > .dropdown:hover > .items {
  display: block;
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}

/*# sourceMappingURL=main.css.map */
